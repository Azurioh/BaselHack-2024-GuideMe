services:
  database:
    image: postgres:15
    container_name: baselhack-2024-database
    restart: always
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=baselhack
    ports:
      - "5432:5432"
    expose:
      - 5432
    networks:
      - local
    volumes:
      - ./.postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d baselhack -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 5

  python-server:
    build:
      context: ./server
      dockerfile: ./Dockerfile.python
    container_name: baselhack-2024-python
    restart: always
    ports:
      - "5000:5000"
    expose:
      - 5000
    volumes:
      - ./server/ai:/app/ai
    networks:
      - local
    storage_opt:
      size: "10G"

  server:
    build:
      context: ./server
      dockerfile: ./Dockerfile
    restart: always
    depends_on:
      database:
        condition: service_healthy
      python-server:
        condition: service_started
    container_name: baselhack-2024-server
    environment:
      - PORT=4242
      - DATABASE_HOSTNAME=database
      - MIGRATE=${MIGRATE:-true}
      - PROD=${PROD:-false}
      - SECRET=secret
      - JWT_SECRET=jwt_secret
    ports:
      - "4242:4242"
    expose:
      - 4242
    volumes:
      - ./server/src:/build_/src
    networks:
      - local
    command: >
      sh -c "scripts/start-server.sh"

  client:
    build:
      context: ./client
      dockerfile: ./Dockerfile
    container_name: baselhack-2024-client
    depends_on:
      - server
    environment:
      - PROD=${PROD:-false}
    ports:
      - 8080:8080
    expose:
      - 8080
    networks:
      - local

networks:
  local:
    driver: bridge
